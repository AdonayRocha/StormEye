// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using StormEye.Infrastructure.Data;

#nullable disable

namespace StormEye.Infrastructure.Migrations
{
    [DbContext(typeof(StormEyeContext))]
    partial class StormEyeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StormEye.Domain.Entities.CartilhaMapeada", b =>
                {
                    b.Property<int>("IdCartilhaM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDCARTILHAM");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCartilhaM"));

                    b.Property<int>("Ativo")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CATEGORIACARTILHA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAOCARTILHA");

                    b.Property<int>("IdCatastrofeM")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDCATASTROFEM");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMECARTILHAM");

                    b.HasKey("IdCartilhaM");

                    b.HasIndex("IdCatastrofeM");

                    b.ToTable("TGS_CARTILHA_MAPEADA", (string)null);
                });

            modelBuilder.Entity("StormEye.Domain.Entities.CatastrofeMapeada", b =>
                {
                    b.Property<int>("IdCatastrofeM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDCATASTROFEM");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatastrofeM"));

                    b.Property<int>("Ativo")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GRAVIDADE");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<string>("NomeCatastrofeM")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMECATASTROFEM");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdCatastrofeM");

                    b.ToTable("TGS_CATASTROFE_MAPEADA", (string)null);
                });

            modelBuilder.Entity("StormEye.Domain.Entities.CartilhaMapeada", b =>
                {
                    b.HasOne("StormEye.Domain.Entities.CatastrofeMapeada", "Catastrofe")
                        .WithMany("Cartilhas")
                        .HasForeignKey("IdCatastrofeM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catastrofe");
                });

            modelBuilder.Entity("StormEye.Domain.Entities.CatastrofeMapeada", b =>
                {
                    b.Navigation("Cartilhas");
                });
#pragma warning restore 612, 618
        }
    }
}
