using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Options;
using StormEyeWeb.Config;
using StormEyeWeb.Models;
using System.Text.Json;

namespace StormEyeWeb.Pages.Alertas
{
    public class AlertasModel : PageModel
    {
        private readonly HttpClient _httpClient;
        private readonly GdacsSettings _gdacsSettings;

        public AlertasModel(IHttpClientFactory httpClientFactory, IOptions<GdacsSettings>
    options)
    {
    _httpClient = httpClientFactory.CreateClient();
    _gdacsSettings = options.Value;
    }

    public List<GdacsAlerta>
        UltimosAlertas { get; set; } = new();

        public async Task OnGetAsync()
        {
        try
        {
        var response = await _httpClient.GetAsync(_gdacsSettings.Url);
        if (!response.IsSuccessStatusCode) return;

        var content = await response.Content.ReadAsStringAsync();

        using var doc = JsonDocument.Parse(content);
        var root = doc.RootElement;
        if (root.TryGetProperty("features", out var features))
        {
        foreach (var item in features.EnumerateArray().Take(5))
        {
        var properties = item.GetProperty("properties");

        UltimosAlertas.Add(new GdacsAlerta
        {
        Tipo = properties.GetProperty("eventtype").GetString() ?? "Desconhecido",
        Data = properties.GetProperty("fromdate").GetString() ?? "",
        Local = properties.GetProperty("country").GetString() ?? "N/A",
        Nivel = properties.GetProperty("alertlevel").GetString() ?? "N/A"
        });
        }
        }
        }
        catch (Exception ex)
        {
        UltimosAlertas = new List<GdacsAlerta>
            ();
            }
            }
            }
            }
